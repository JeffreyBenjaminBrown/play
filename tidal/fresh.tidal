import Data.Fixed
cps 0.5
3

hush
d1 $ sound "psr*16" |*| up (irand 2 - 1)
d1 $ sound "psr*16" |*| up (irand 3)
d1 $ sound "psr*16" |*| up (scale 0 3 square)
d1 $ sound "psr*16" |*| speed (sine - 0.1) -- dope!

d1 $ sound $ stack[ "ho*3", "bd sn:2"]
d2 $ sound "psr*24" # up "0 [3 10] [7!! -1]" |+| up (sine*3.0)
d2 $ sound "sn:2(3,[8 6]/2,[2 4]/2)"

d1 $ e 7 8 $ sound "bd sn:2"
-- d1 $ up (flip mod' 3 $ (run 8 :: Pattern Double)) # sound "arpy"
d1 $ sound "sy" |*| qf "100"
d1 $ up "0 [5 10] [0 4 7] [1 5]/2" # sound "[arpy bass2 bd]"
hush
d1 $ every 4 rev (sound "bd*2 [bd [sn sn*2 sn] sn]")


:t run 12
:l "git_play/tidal/loadEveryTime.hs"
:l "git_play/tidal/test-load-haskell.hs"
