let g = L.empty :: G
view g $ nodes g
mapM_ (putStrLn . show) $ labEdges g
-- must hear ! two samples, two parts, two part-parts, ..
g <- return $ addNodes [Q$Spl "bd", Q$Spl "ho", Seq] g
g <- return $ insEdges [(2,0,HasAt 0),(2,1,HasAt $ 1/2)] g
let x = trigList g 2

d1 $ st [hStar g 2] -- ! next

d1 $ trigListToPatt' $ trigList g 2 -- works!
d1 $ st [hStar g 0, hStar g 1] -- works!


