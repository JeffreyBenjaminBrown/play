
let v1 = sound "psr"

let m1 = "[0,18] [0 [3,9] [7,18]]" :: Pattern Double
let m2 = "[0 18 0] [0 3 7 0 11 14 0 18] [3,9] [7,18]*3]" :: Pattern Double
let mLar = "0 [18 4] 0 [4 18] 13 [25 26] 25 24" :: Pattern Double

let m3 = (2.5*) <$> run 5
let p5 = (*(18/3)) 

-- 2015 10 26

let m1 = listToPat [0, 2, 4, 6, 8, 10]
let m2 = listToPat [0, 3, 5, 8, 10]
let m3 = listToPat [0, 3, 7, 10]
let m4 = listToPat [0,5,10]
let n1 = cat [m1, rev m1, m2, rev m2, m3, rev m3, m4, rev m4]
let n2 = cat [n1, (1/5) <~ n1] -- this evaluates even if the last n1 
let v = sound "metal" |+| hi "-31"
let r = sound "bd*10" |+| v


-- 2015 10 21
