let scales = [[1, 1.2, 1.5, 1.7],   [1, 1.25, 1.5, 15/8],   [1, 1.3, 1.6, 1.9, 2.2], [1,1+1/3,1+2/3]]
let scales = [[1, 1.3, 1.5, 1.6],   [1, 1.25, 1.5, 15/8],   [1, 1.3, 1.6, 1.9, 2.2], [1,1+1/3,1+2/3]]
let scales = [take n [5,7..] | n <- [1..6]]
let lkScale = ((M.fromList $ zip [1..] scales) !)::Int->[Double]
let ins = sd "sy" |*| qf "50" -- instrument
let rootSeq = qf $. slow 4 $. "1 1.2 1 0.9"
let qf' scPat degPat = qf $. runDegPat lkji lkScale scPat degPat |*| ins |*| rootSeq
