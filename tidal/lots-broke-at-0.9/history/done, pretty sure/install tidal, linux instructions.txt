Tidal on Linux
==============
The following currently assumes a Debian, or Debian-derived Linux distribution such as Ubuntu or Mint, although it should be quite easy to adapt to another distribution.

A Linux installation script now exists, which should mostly work under recent debian based distributions. It comes with no warranty, though. It's available here, click 'raw' to download it:

https://github.com/yaxu/Tidal/blob/master/doc/install-linux.sh

Once you have run that script, log out and then back in again (to ensure you have the right group settings), and if all is well, you should be good to go.

Alternatively, you can follow the step-by-step instructions below. Unless otherwise specified, you will need to run the commands in a terminal window.

Installing Dirt
---------------
Tidal does not include a synthesiser, but instead communicates with an external synthesiser using the Open Sound Control protocol. It has been developed for use with a particular software sampler called "dirt". You'll need to run it with "jack audio".

sudo apt-get install build-essential libsndfile1-dev libsamplerate0-dev \
                     liblo-dev libjack-jackd2-dev qjackctl jackd git
git clone https://github.com/yaxu/Dirt.git
cd Dirt
make clean; make
Then you'll have to start jack, using the 'qjackctl' app under Linux, or otherwise from the commandline:

jackd -d alsa &
If that doesn't work, you might well have something called "pulseaudio" in control of your sound. In that case, this should work:

/usr/bin/pasuspender -- jackd -d alsa &
And finally you should be able to start dirt with this:

./dirt &
If you have problems with jack, try enabling realtime audio, and adjusting the settings by installing and using the "qjackctl" software. Some more info can be found in the Ubuntu Community page for JACK configuration

You will have to start dirt every time you want to run Tidal, otherwise there will be no sound.

Now you need to install and configure an editor, following the instructions below. For beginners, the Atom editor is recommended.

Tidal
-----
Tidal is embedded in the Haskell language, so you'll have to install the haskell interpreter and some libraries, including tidal itself. Under debian, you'd install haskell like this:

sudo apt-get install ghc6 zlib1g-dev cabal-install
Or otherwise could grab the haskell platform

Once Haskell is installed, you can install tidal like this:

cabal update
cabal install tidal
You will have to start dirt every time you want to run Tidal, otherwise there will be no sound.

Now you need to install and configure an editor, following the instructions below. For beginners, the Atom editor is recommended.


Emacs
=====
Emacs is a classic programmer's editor, very well developed but a little difficult to use at first. For a while Emacs was the only editor that worked with Tidal, but if you're not feeling confident, you may wish to try the Atom editor instead, using the instructions above.

Emacs under Linux

Debian, Ubuntu and Linux Mint users can install emacs, along with its haskell front-end, this way:

sudo apt-get install emacs24 haskell-mode
To install the emacs interface to tidal, you'll need to edit a configuration file in your home folder called .emacs. If it doesn't exist, create it. Then, add the following, replacing ~/projects/tidal with the location of the tidal.el file.

(add-to-list 'load-path "~/projects/tidal")
(require 'haskell-mode)
(require 'tidal)
If tidal.el did not come with this document, you can grab it here: https://raw.github.com/yaxu/Tidal/master/tidal.el

Now see under 'Testing, testing' below to check everything is working.

Testing, testing...
===================

Now start emacs, and open a new file called something like "helloworld.tidal". Once the file is opened, you still have to start tidal, you do that by typing Ctrl-C then Ctrl-S.

To check everything is working, type the following line, then type Ctrl-Enter:

d1 $ brak $ sound "bd sn/2"
All being well you'll hear a bass drum and a kick, and can progress to the 'patterns' menu to start learning Tidal.

Sublime Text
Sublime Text is a popular cross-platform text editor. It is closed source and costs 70 USD.

To do live coding in Sublime Text, install the package Sublime REPL via Package Control.

To avoid fiddling with the existing Haskell REPL supplied by Sublime REPL simply clone this modified version of it:

cd ~/Library/Application Support/Sublime Text 3/Packages/SublimeREPL/config
git clone https://gist.github.com/lennart/8b811cd4f568f7d7100e Tidal
This way, cmd+shift+p > "Sublime REPL: Tidal" will load up a ghci instance that loads Tidal, binds dirt channels and adds macros for hush and cps.

Splitting windows beforehand (e.g. cmd+alt+shift+2 for two row layout) will load the REPL into the other splitscreen, so you can code in one and evaluate into the other.

Code by line evaluation is mapped to ctrl+, l by default but this can be customized to what you prefer:

{ "keys": ["shift+enter"], "command": "repl_transfer_current", "args": {"scope": "lines"} }
Of course you have to make sure dirt is already running when you can hear any sound.

Vim
Installation instructions for the Vim editor have not yet been integrated into the documentation, but you can find details in this forum thread.

Installing Tidal
Installing an Editor
Atom
Emacs
Sublime Text
Vim
