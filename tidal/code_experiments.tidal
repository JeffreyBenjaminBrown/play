-- 2016 03 18
hush
dur 2
let ps1 = "{x ~ x}%8" :: Pattern String -- (%) restarts each measure!
d1 $ sound "bd"
d2 $ sound $. pp ps1 "psr"

hush
dur 2
let ps1 = "{x ~ x}%4 {x ~ x}%4" :: Pattern String -- (%) restarts each mention!
d1 $ sound "bd"
d2 $ sound $. pp ps1 "psr"


-- 2016 03 16
d4 $ sound "{psr psr}%3"
d3 $ sound "cp"

-- 2016 02 26-ish

hush
dur 1 -- changewhen
let p1 = sound "bd*4 hh*4"
let p2 = sound "sn*4 hc*4"
let aTest now n = (\t -> (floor t) > div (floor now) n * n + n)
let f n = d1 $ changeWhen (aTest now n) p1 p2
f 7
now

-- playWhen starts at mod 2 where I expect mod 0
hush
now
dur 1.8
let p1 = sound "bd*4 hh*4"
let aTest denom = d1 $ playWhen (\t -> (floor t) > div (floor now) denom * denom + denom) p1
aTest 5 -- how to use the test: execute "testPlayWhen n" for some n
  -- then repeatedly evaluate "now" (in this buffer, not *tidal*)
  -- evaluate "now" one last time when it starts playing, 
    -- before the end of the first cycle
  -- so far the result always seems to be equal to 2 mod n
    -- I tested n=3,4,5,7,9, and I tried restarting Tidal and Dirt
